---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: recipes
  namespace: family
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 0.1.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 5m

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true

  dependsOn:
    - name: postgres14
      namespace: dbs

  values:
    image:
      repository: vabene1111/recipes
      tag: 1.3.3
      pullPolicy: IfNotPresent

    env:
      DEBUG: 1
      EMAIL_HOST: "${SECRET_RECIPES_EMAIL_HOST}"
      EMAIL_PORT: 587
      EMAIL_HOST_PASSWORD: "${SECRET_RECIPES_EMAIL_KEY}"
      EMAIL_HOST_USER: "${SECRET_RECIPES_EMAIL_USER}"
      EMAIL_USE_TLS: 1
      EMAIL_USE_SSL: 0
      DEFAULT_FROM_EMAIL: "${SECRET_RECIPES_EMAIL_ADDR}"
      ACCOUNT_EMAIL_SUBJECT_PREFIX: "[Recipes]"
      TIMEZONE: ${TIMEZONE}
      ALLOWED_HOSTS: "*"
      SECRET_KEY: ${SECRET_RECIPES_SECRET_KEY}
      DB_ENGINE: django.db.backends.postgresql
      POSTGRES_HOST: ${SECRET_DBS_POSTGRES14_ADDRESS}
      POSTGRES_PORT: 5432
      POSTGRES_DB: recipes
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${SECRET_RECIPES_DB_PASSWORD}
      FRACTION_PREF_DEFAULT: "0"
      COMMENT_PREF_DEFAULT: "1"
      SHOPPING_MIN_AUTOSYNC_INTERVAL: "5"

    persistence:
      config:
        enabled: true
        existingClaim: food-config
      media:
        enabled: true
        existingClaim: food-media
        mountPath: /opt/recipes/mediafiles
      static:
        enabled: true
        type: emptyDir
        mountPath: /opt/recipes/staticfiles

    service:
      main:
        ports:
          http:
            port: 8080

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: 'letsencrypt-production'
          hajimari.io/enable: 'true'
          hajimari.io/icon: 'food'
          nginx.ingress.kubernetes.io/whitelist-source-range: "${SECRET_NETWORK_INGRESS_WHITELIST}"
        hosts:
          - host: "food.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "food.${SECRET_DOMAIN}"
            secretName: "food-tls"
