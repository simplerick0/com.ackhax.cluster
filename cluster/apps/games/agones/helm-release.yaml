---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: agones
  namespace: games
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://agones.dev/charts/stable
      chart: agones
      version: 1.25.0
      sourceRef:
        kind: HelmRepository
        name: agones
        namespace: flux-system
      interval: 5m

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true

  values:
    agones:
      featureGates: ""
      metrics:
        prometheusEnabled: true
        prometheusServiceDiscovery: true
        stackdriverEnabled: false
        stackdriverProjectID: ""
        stackdriverLabels: ""
        serviceMonitor:
          enabled: false
          interval: 30s
      rbacEnabled: true
      registerServiceAccounts: true
      registerWebhooks: true
      registerApiService: true
      crds:
        install: true
        cleanupOnDelete: true
      serviceaccount:
        allocator:
          name: agones-allocator
          annotations: {}
        controller:
          name: agones-controller
          annotations: {}
        sdk:
          name: agones-sdk
          annotations: {}
      createPriorityClass: true
      priorityClassName: agones-system
      controller:
        resources: {}
            # requests:
            #   cpu: 1
            #   memory: 256Mi
        nodeSelector: {}
        annotations: {}
        tolerations:
          - key: "agones.dev/agones-system"
            operator: "Equal"
            value: "true"
            effect: "NoExecute"
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: agones.dev/agones-system
                      operator: Exists
        generateTLS: true
        tlsCert: ""
        tlsKey: ""
        disableSecret: false
        allocationApiService:
          annotations: {}
          disableCaBundle: false
        validatingWebhook:
          annotations: {}
          disableCaBundle: false
        mutatingWebhook:
          annotations: {}
          disableCaBundle: false
        customCertSecretPath: {}
        safeToEvict: false
        persistentLogs: true
        persistentLogsSizeLimitMB: 10000
        logLevel: info
        numWorkers: 100
        apiServerQPS: 400
        apiServerQPSBurst: 500
        http:
          port: 8080
        healthCheck:
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 3
          timeoutSeconds: 1
        allocationBatchWaitTime: 500ms
      ping:
        install: true
        resources: {}
            # requests:
            #   cpu: 1
            #   memory: 256Mi
        nodeSelector: {}
        annotations: {}
        tolerations:
          - key: "agones.dev/agones-system"
            operator: "Equal"
            value: "true"
            effect: "NoExecute"
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: agones.dev/agones-system
                      operator: Exists
        replicas: 2
        http:
          expose: true
          response: ok
          port: 80
          serviceType: LoadBalancer
          loadBalancerIP: ""
          loadBalancerSourceRanges: []
          annotations: {}
        udp:
          expose: true
          rateLimit: 20
          port: 50000
          serviceType: LoadBalancer
          loadBalancerIP: ""
          loadBalancerSourceRanges: []
          annotations: {}
        healthCheck:
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 3
          timeoutSeconds: 1
      allocator:
        install: true
        apiServerQPS: 400
        apiServerQPSBurst: 500
        logLevel: info
        annotations: {}
        resources: {}
            # requests:
            #   cpu: 1
            #   memory: 256Mi
        healthCheck:
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 3
          timeoutSeconds: 1
        tolerations:
          - key: "agones.dev/agones-system"
            operator: "Equal"
            value: "true"
            effect: "NoExecute"
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: agones.dev/agones-system
                      operator: Exists
        replicas: 3
        service:
          name: agones-allocator
          serviceType: LoadBalancer
          loadBalancerIP: "${SECRET_GAMES_AGONES_ADDRESS}"
          loadBalancerSourceRanges: []
          annotations: {}
          http:
            enabled: true
            port: 443
            portName: https
            targetPort: 8443
            nodePort: 0 # nodePort will be used if the serviceType is set to NodePort
          grpc:
            enabled: true
            port: 443
            portName: grpc
            targetPort: 8443
            nodePort: 0 # nodePort will be used if the serviceType is set to NodePort
        serviceMetrics:
          name: agones-allocator-metrics-service
          annotations: {}
          http:
            enabled: true
            port: 8080
            portName: http
        disableSecretCreation: false
        generateTLS: true
        tlsCert: ""
        tlsKey: ""
        generateClientTLS: true
        clientCAs: {}
        disableMTLS: false
        disableTLS: false
        remoteAllocationTimeout: 10s
        totalRemoteAllocationTimeout: 30s
        allocationBatchWaitTime: 500ms
      image:
        registry: gcr.io/agones-images
        tag: 1.25.0
        controller:
          name: agones-controller
          pullPolicy: IfNotPresent
        sdk:
          name: agones-sdk
          cpuRequest: 30m
          cpuLimit: 0
          memoryRequest: 0
          memoryLimit: 0
          alwaysPull: false
        ping:
          name: agones-ping
          pullPolicy: IfNotPresent
        allocator:
          name: agones-allocator
          pullPolicy: IfNotPresent

    gameservers:
      namespaces:
        - games
      minPort: 7000
      maxPort: 8000
      podPreserveUnknownFields: false

    helm:
      installTests: false
